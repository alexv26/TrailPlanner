.container {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
}

.hero {
  position: relative;
  width: 100vw;
  height: calc(100vh - 60px);
  overflow: hidden;
}

.hero video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  object-fit: cover;
  z-index: -1;
}

.content {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/* Text overlay container */
.hero-text {
  display: flex;
  flex-direction: column;
  text-align: center;
  z-index: 0;
}

/* Responsive H1 using clamp(min, preferred, max) */
.hero-text h1 {
  font-size: clamp(2.5rem, 8vw, 6rem); /* grows from 2.5rem to 6rem */
  margin-bottom: 0.5rem;
  color: lime;
  text-shadow: 2px 2px 12px rgba(0, 0, 0, 0.7);
}

/* Responsive paragraph text */
.hero-text p {
  font-size: clamp(1rem, 2vw, 1.5rem); /* scales well on all devices */
  text-shadow: 2px 2px 12px rgba(0, 0, 0, 0.9);
  color: white;
  margin-bottom: 1rem;
}

.hero a {
  border-radius: 6px;
  padding: 0.7rem;
  width: fit-content;
  text-align: center;
  text-decoration: none;
  color: white;
  font-size: clamp(1rem, 2.2vw, 1.4rem);
  transition: transform 0.2s ease-in-out;
  background-color: limegreen;
}

.hero a:hover {
  transform: scale(1.06);
}

.animButton {
  /* You can replace 'your-class-name' with a meaningful name */
  position: relative; /* relative */
  display: flex; /* flex */
  width: fit-content; /* w-fit */
  align-items: center; /* items-center */
  gap: 0.375rem; /* gap-1.5 (1.5 * 0.25rem = 0.375rem) */
  border-radius: 9999px; /* rounded-full */
  border: none;
  background-color: lime;
  padding-left: 1rem; /* px-4 (4 * 0.25rem = 1rem) */
  padding-right: 1rem; /* px-4 */
  padding-top: 0.5rem; /* py-2 (2 * 0.25rem = 0.5rem) */
  padding-bottom: 0.5rem; /* py-2 */
  color: black; /* text-gray-50 */
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke; /* transition-colors */
  transition-timing-function: cubic-bezier(
    0.4,
    0,
    0.2,
    1
  ); /* default ease-in-out */
  transition-duration: 150ms; /* default duration */
}

.animArrow {
  /* Apply this to the element that needs the transform */
  transition-property: transform; /* transition-transform */
  transition-timing-function: cubic-bezier(
    0.4,
    0,
    0.2,
    1
  ); /* default ease-in-out */
  transition-duration: 150ms; /* default duration */
}

/* For the group-hover effect, assuming 'your-class-name' is the parent with 'group' */
.animButton:hover .animArrow {
  transform: rotate(-45deg); /* group-hover:-rotate-45 */
}

/* For the group-active effect, assuming 'your-class-name' is the parent with 'group' */
.animButton:active .animArrow {
  transform: rotate(-12deg); /* group-active:-rotate-12 */
}
